/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JansConfigApi);
  }
}(this, function(expect, JansConfigApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JansConfigApi.SmtpConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SmtpConfiguration', function() {
    it('should create an instance of SmtpConfiguration', function() {
      // uncomment below and update the code to test SmtpConfiguration
      //var instane = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be.a(JansConfigApi.SmtpConfiguration);
    });

    it('should have the property host (base name: "host")', function() {
      // uncomment below and update the code to test the property host
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property port (base name: "port")', function() {
      // uncomment below and update the code to test the property port
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property requiresSsl (base name: "requires_ssl")', function() {
      // uncomment below and update the code to test the property requiresSsl
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property trustHost (base name: "trust_host")', function() {
      // uncomment below and update the code to test the property trustHost
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fromName (base name: "from_name")', function() {
      // uncomment below and update the code to test the property fromName
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fromEmailAddress (base name: "from_email_address")', function() {
      // uncomment below and update the code to test the property fromEmailAddress
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property requiresAuthentication (base name: "requires_authentication")', function() {
      // uncomment below and update the code to test the property requiresAuthentication
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "user_name")', function() {
      // uncomment below and update the code to test the property userName
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new JansConfigApi.SmtpConfiguration();
      //expect(instance).to.be();
    });

  });

}));
