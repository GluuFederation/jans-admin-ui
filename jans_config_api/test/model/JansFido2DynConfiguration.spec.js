/**
 * jans-config-api
 * jans-config-api - Authorization services
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: xxx@gluu.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.JansConfigApi);
  }
}(this, function(expect, JansConfigApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new JansConfigApi.JansFido2DynConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JansFido2DynConfiguration', function() {
    it('should create an instance of JansFido2DynConfiguration', function() {
      // uncomment below and update the code to test JansFido2DynConfiguration
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be.a(JansConfigApi.JansFido2DynConfiguration);
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property baseEndpoint (base name: "baseEndpoint")', function() {
      // uncomment below and update the code to test the property baseEndpoint
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property cleanServiceInterval (base name: "cleanServiceInterval")', function() {
      // uncomment below and update the code to test the property cleanServiceInterval
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property cleanServiceBatchChunkSize (base name: "cleanServiceBatchChunkSize")', function() {
      // uncomment below and update the code to test the property cleanServiceBatchChunkSize
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property useLocalCache (base name: "useLocalCache")', function() {
      // uncomment below and update the code to test the property useLocalCache
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property disableJdkLogger (base name: "disableJdkLogger")', function() {
      // uncomment below and update the code to test the property disableJdkLogger
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property loggingLevel (base name: "loggingLevel")', function() {
      // uncomment below and update the code to test the property loggingLevel
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property loggingLayout (base name: "loggingLayout")', function() {
      // uncomment below and update the code to test the property loggingLayout
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property externalLoggerConfiguration (base name: "externalLoggerConfiguration")', function() {
      // uncomment below and update the code to test the property externalLoggerConfiguration
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property metricReporterInterval (base name: "metricReporterInterval")', function() {
      // uncomment below and update the code to test the property metricReporterInterval
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property metricReporterKeepDataDays (base name: "metricReporterKeepDataDays")', function() {
      // uncomment below and update the code to test the property metricReporterKeepDataDays
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property metricReporterEnabled (base name: "metricReporterEnabled")', function() {
      // uncomment below and update the code to test the property metricReporterEnabled
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property personCustomObjectClassList (base name: "personCustomObjectClassList")', function() {
      // uncomment below and update the code to test the property personCustomObjectClassList
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fido2Configuration (base name: "fido2Configuration")', function() {
      // uncomment below and update the code to test the property fido2Configuration
      //var instane = new JansConfigApi.JansFido2DynConfiguration();
      //expect(instance).to.be();
    });

  });

}));
